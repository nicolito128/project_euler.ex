defmodule Problems.P2 do
  @moduledoc """
  Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with and , the first terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
  """

  def fib(n), do: fib(n, {0, 1})

  def fib(0, {cur, _next}), do: cur

  def fib(n, {cur, next}), do: fib(n-1, {next, cur+next})

  def sum_even_terms(limit), do: sum_even_terms(limit, 1, 0)

  def sum_even_terms(limit, n, acc) do
    fib_n = fib(n)
    if fib_n <= limit and rem(fib_n, 2) == 0 do
      sum_even_terms(limit, n+1, acc+fib_n)
    else
      if fib_n > limit do
        acc
      else
        sum_even_terms(limit, n+1, acc)
      end
    end
  end

  def start() do
    limit = 4_000_000
    result = sum_even_terms(limit)
    IO.puts("The sum of even-valued terms in the Fibonacci sequence below to #{limit}: #{result}")
  end
end
